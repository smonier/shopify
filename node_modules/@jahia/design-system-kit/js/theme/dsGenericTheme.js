"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _merge2 = _interopRequireDefault(require("lodash/merge"));
var _core = require("@material-ui/core");
var _shape = require("./shape");
var _typography = require("./typography");
var _appbar = require("./default/appbar");
var _avatar = require("./default/avatar");
var _button = require("./default/button");
var _card = require("./default/card");
var _dialog = require("./default/dialog");
var _divider = require("./default/divider");
var _checkbox = require("./default/checkbox");
var _input = require("./default/input");
var _menu = require("./default/menu");
var _paper = require("./default/paper");
var _select = require("./default/select");
var _icon = require("./default/icon");
var _table = require("./default/table");
var _tabs = require("./default/tabs");
var _toolbar = require("./default/toolbar");
var _toggle = require("./default/toggle");
var _list = require("./default/list");
var _typography2 = require("./default/typography");
var _tooltips = require("./default/tooltips");
var _form = require("./default/form");
var _panel = require("./default/panel");
var _chip = require("./default/chip");
var _snackbar = require("./default/snackbar");
var _palette = require("./palette.js");
var _shadows = require("./shadows.js");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var dsGenericThemeConfig = {
  palette: _palette.dsGenericPalette,
  shape: _shape.shape,
  typography: _objectSpread(_objectSpread({}, _typography.typography), {}, {
    useNextVariants: true
  }),
  shadows: _shadows.dsShadows
};
var dsThemeOverrides = function dsThemeOverrides(theme) {
  return {
    MuiAppBar: (0, _appbar.dsAppBar)(theme),
    MuiAvatar: (0, _avatar.dsAvatar)(theme),
    MuiButton: (0, _button.dsButton)(theme),
    MuiButtonBase: (0, _button.dsButtonBase)(theme),
    MuiIconButton: (0, _button.dsIconButton)(theme),
    MuiCard: (0, _card.dsCard)(theme),
    MuiCardContent: (0, _card.dsCardContent)(theme),
    MuiCardHeader: (0, _card.dsCardHeader)(theme),
    MuiCheckbox: (0, _checkbox.dsCheckbox)(theme),
    MuiChip: (0, _chip.dsChip)(theme),
    MuiDialogTitle: (0, _dialog.dsDialogTitle)(theme),
    MuiDialog: (0, _dialog.dsDialog)(theme),
    MuiDialogActions: (0, _dialog.dsDialogActions)(theme),
    MuiDialogContent: (0, _dialog.dsDialogContent)(theme),
    MuiDivider: (0, _divider.dsDivider)(theme),
    MuiFormLabel: (0, _form.dsFormLabel)(theme),
    MuiFormControlLabel: (0, _form.dsFormControlLabel)(theme),
    MuiInput: (0, _input.dsInput)(theme),
    MuiInputBase: (0, _input.dsInputBase)(theme),
    MuiListItem: (0, _list.dsListItem)(theme),
    MuiListItemIcon: _list.dsListItemIcon,
    MuiListItemSecondaryAction: _list.dsListItemSecondaryAction,
    MuiListSubheader: _list.dsListSubheader,
    MuiListItemText: _list.dsListItemText,
    MuiMenu: (0, _menu.dsMenu)(theme),
    MuiMenuItem: (0, _menu.dsMenuItem)(theme),
    MuiExpansionPanel: (0, _panel.dsPanel)(theme),
    MuiExpansionPanelDetails: _panel.dsPanelDetails,
    MuiExpansionPanelActions: (0, _panel.dsPanelActions)(theme),
    MuiPaper: (0, _paper.dsPaper)(theme),
    MuiSelect: (0, _select.dsSelect)(theme),
    MuiSnackbarContent: (0, _snackbar.dsSnackbarContent)(theme),
    MuiSvgIcon: (0, _icon.dsIcons)(theme),
    MuiTable: (0, _table.dsTable)(theme),
    MuiTableRow: (0, _table.dsTableRow)(theme),
    MuiTableCell: (0, _table.dsTableCell)(theme),
    MuiTab: (0, _tabs.dsTab)(theme),
    MuiTabs: (0, _tabs.dsTabs)(theme),
    MuiToggleButton: (0, _toggle.dsToggleButton)(theme),
    MuiToolbar: (0, _toolbar.dsToolBar)(theme),
    MuiTooltip: (0, _tooltips.dsTooltip)(theme),
    MuiTypography: (0, _typography2.dsTypography)(theme)
  };
};
var dsGenericTheme = (0, _core.createMuiTheme)(dsGenericThemeConfig);
(0, _merge2["default"])(dsGenericTheme, {
  overrides: dsThemeOverrides(dsGenericTheme)
});
var _default = dsGenericTheme;
exports["default"] = _default;