"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _capitalize2 = _interopRequireDefault(require("lodash/capitalize"));
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _core = require("@material-ui/core");
var _PropTypesConstants = _interopRequireDefault(require("../PropTypesConstants"));
var _excluded = ["root", "disabled", "expanded", "defaultExpanded"],
  _excluded2 = ["variant", "color", "classes"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/* Styles applied in the component.
* root: the style of the component itself
* attributeValue: when an attribute is set
*/
var styles = function styles(theme) {
  return {
    root: {
      position: 'relative',
      boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.1)',
      margin: '0 0 ' + theme.spacing.unit + 'px 0',
      '&:before': {
        position: 'absolute',
        left: 0,
        top: -1,
        right: 0,
        height: 1,
        content: '""',
        opacity: 1,
        backgroundColor: theme.palette.divider
      },
      '&:first-child': {
        borderTopLeftRadius: 2,
        borderTopRightRadius: 2,
        '&:before': {
          display: 'none'
        }
      },
      '&$expanded + &': {
        '&:before': {
          display: 'none'
        }
      }
    },
    normal: {
      borderRadius: 1,
      border: 'solid 1px ' + theme.palette.ui.omega,
      '&:focus': {
        backgroundColor: theme.palette.ui.omega
      }
    },
    ghost: {
      backgroundColor: 'transparent',
      boxShadow: 'none',
      border: 'none',
      '&:hover': {
        boxShadow: 'none'
      },
      '&:focus': {
        backgroundColor: theme.palette.ui.omega
      }
    },
    expanded: {
      margin: theme.spacing.unit * 2 + 'px 0',
      boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.2)',
      '&:hover': {
        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.2)'
      },
      '&:first-child': {
        marginTop: 0
      },
      '&:last-child': {
        marginBottom: 0
      },
      '&:before': {
        opacity: 0
      }
    },
    colorDefault: {
      backgroundColor: theme.palette.ui.epsilon,
      color: theme.palette.font.alpha
    },
    colorInverted: {
      backgroundColor: theme.palette.ui.beta,
      color: theme.palette.invert.beta,
      border: 'solid 1px ' + theme.palette.invert.alpha
    },
    ghostDisabled: {
      backgroundColor: theme.palette.ui.beta
    },
    /* Styles applied to the root element if `disabled={true}`. */
    disabled: {
      backgroundColor: 'inherit',
      color: theme.palette.font.gamma,
      boxShadow: 'none',
      cursor: 'not-allowed',
      '& :first-child': {
        opacity: 0.5
      },
      '& :last-child': {
        opacity: 0.5
      },
      '&:hover': {
        boxShadow: 'none'
      }
    }
  };
};

/*
   Set custom classes of component
 */
var getClasses = function getClasses(_ref) {
  var variant = _ref.variant,
    color = _ref.color,
    _ref$classes = _ref.classes,
    root = _ref$classes.root,
    disabled = _ref$classes.disabled,
    expanded = _ref$classes.expanded,
    defaultExpanded = _ref$classes.defaultExpanded,
    dsClasses = _objectWithoutProperties(_ref$classes, _excluded);
  return {
    root: (0, _classnames["default"])(root, dsClasses[variant], dsClasses['color' + (0, _capitalize2["default"])(color)]),
    disabled: disabled,
    expanded: expanded,
    defaultExpanded: defaultExpanded
  };
};

/*
   Spread new classes into original component
 */
var ExpansionPanel = (0, _core.withStyles)(styles, {
  name: 'DsExpansionPanel'
})(function (_ref2) {
  var variant = _ref2.variant,
    color = _ref2.color,
    classes = _ref2.classes,
    props = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/_react["default"].createElement(_core.ExpansionPanel, _extends({
    classes: getClasses({
      variant: variant,
      color: color,
      classes: classes
    })
  }, props));
});

/*
  Proptype of component
 */
ExpansionPanel.propTypes = process.env.NODE_ENV !== 'production' ? {
  variant: _PropTypesConstants["default"].ExpansionPanelVariants,
  color: _PropTypesConstants["default"].ExpansionPanelColors,
  children: _propTypes["default"].node.isRequired,
  classes: _propTypes["default"].object,
  className: _propTypes["default"].string,
  CollapseProps: _propTypes["default"].object,
  defaultExpanded: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  expanded: _propTypes["default"].bool,
  onChange: _propTypes["default"].func
} : {};

/*
   Default Props
 */
ExpansionPanel.defaultProps = {
  variant: 'normal',
  color: 'default',
  defaultExpanded: false,
  disabled: false
};
ExpansionPanel.displayName = 'DsExpansionPanel';
var _default = ExpansionPanel;
exports["default"] = _default;