"use strict";

var _react = _interopRequireDefault(require("react"));
var _react2 = require("@storybook/react");
var _addonKnobs = require("@storybook/addon-knobs");
var _Input = require("./Input");
var _Input2 = _interopRequireDefault(require("./Input.md"));
var _provider = require("../../provider");
var _icons = require("@material-ui/icons");
var _addonActions = require("@storybook/addon-actions");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var readOnly = function readOnly() {
  return (0, _addonKnobs["boolean"])('readOnly', false);
};
var disabled = function disabled() {
  return (0, _addonKnobs["boolean"])('disabled', false);
};
var error = function error() {
  return (0, _addonKnobs["boolean"])('error', false);
};
var onBlur = function onBlur() {
  return (0, _addonActions.action)('onBlur');
};
var onChange = function onChange() {
  return (0, _addonActions.action)('onChange');
};
var onFocus = function onFocus() {
  return (0, _addonActions.action)('onFocus');
};
(0, _react2.storiesOf)('Input', module).addDecorator(_addonKnobs.withKnobs).add('default', function () {
  return /*#__PURE__*/_react["default"].createElement(_provider.DSProvider, null, /*#__PURE__*/_react["default"].createElement(_Input.Input, {
    disabled: disabled(),
    error: error(),
    readOnly: readOnly(),
    onBlur: onBlur(),
    onChange: onChange(),
    onFocus: onFocus()
  }));
}, {
  notes: {
    markdown: _Input2["default"]
  }
}).add('number', function () {
  return /*#__PURE__*/_react["default"].createElement(_provider.DSProvider, null, /*#__PURE__*/_react["default"].createElement(_Input.Input, {
    type: "number",
    disabled: disabled(),
    error: error(),
    readOnly: readOnly(),
    onBlur: onBlur(),
    onChange: onChange(),
    onFocus: onFocus()
  }));
}, {
  notes: {
    markdown: _Input2["default"]
  }
}).add('number long', function () {
  return /*#__PURE__*/_react["default"].createElement(_provider.DSProvider, null, /*#__PURE__*/_react["default"].createElement(_Input.Input, {
    type: "number",
    decimalScale: 0,
    disabled: disabled(),
    error: error(),
    readOnly: readOnly(),
    onBlur: onBlur(),
    onChange: onChange(),
    onFocus: onFocus()
  }));
}, {
  notes: {
    markdown: _Input2["default"]
  }
}).add('number decimal', function () {
  return /*#__PURE__*/_react["default"].createElement(_provider.DSProvider, null, /*#__PURE__*/_react["default"].createElement(_Input.Input, {
    type: "number",
    decimalSeparator: ".",
    decimalScale: 5,
    disabled: disabled(),
    error: error(),
    readOnly: readOnly(),
    onBlur: onBlur(),
    onChange: onChange(),
    onFocus: onFocus()
  }));
}, {
  notes: {
    markdown: _Input2["default"]
  }
}).add('icon', function () {
  return /*#__PURE__*/_react["default"].createElement(_provider.DSProvider, null, /*#__PURE__*/_react["default"].createElement(_Input.Input, {
    variant: {
      icon: /*#__PURE__*/_react["default"].createElement(_icons.Search, null)
    },
    disabled: disabled(),
    error: error(),
    readOnly: readOnly(),
    onBlur: onBlur(),
    onChange: onChange(),
    onFocus: onFocus()
  }));
}, {
  notes: {
    markdown: _Input2["default"]
  }
}).add('interactive', function () {
  return /*#__PURE__*/_react["default"].createElement(_provider.DSProvider, null, /*#__PURE__*/_react["default"].createElement(_Input.Input, {
    variant: {
      interactive: /*#__PURE__*/_react["default"].createElement(_icons.Close, null)
    },
    disabled: disabled(),
    error: error(),
    readOnly: readOnly(),
    onBlur: onBlur(),
    onChange: onChange(),
    onFocus: onFocus()
  }));
}, {
  notes: {
    markdown: _Input2["default"]
  }
});