"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _capitalize2 = _interopRequireDefault(require("lodash/capitalize"));
var _react = _interopRequireDefault(require("react"));
var _core = require("@material-ui/core");
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _excluded = ["root", "badge"],
  _excluded2 = ["variant", "color", "position", "classes", "icon", "children"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var styles = function styles(theme) {
  return {
    root: {
      backgroundColor: theme.palette.moonstone.neutral.grayLight40,
      color: theme.palette.moonstone.accent.dark,
      margin: '0 ' + theme.spacing.unit + 'px',
      '& svg': {
        width: 14,
        "float": 'left'
      }
    },
    normal: {
      height: theme.spacing.unit * 2.25,
      minWidth: theme.spacing.unit * 2.25,
      borderRadius: theme.spacing.unit,
      padding: "0 ".concat(theme.spacing.unit / 2, "px")
    },
    dot: {
      height: theme.spacing.unit,
      minWidth: theme.spacing.unit,
      borderRadius: '50%',
      '& > span': {
        display: 'none'
      }
    },
    circle: {
      height: theme.spacing.unit * 2.25,
      minWidth: theme.spacing.unit * 2.25,
      borderRadius: '50%'
    },
    positionInline: {
      display: 'inline-flex',
      alignItems: 'center',
      lineHeight: 'normal'
    },
    positionRelative: {},
    colorSuccess: {
      backgroundColor: theme.palette.moonstone.support.success40,
      color: theme.palette.moonstone.neutral.grayDark
    },
    colorInfo: {
      backgroundColor: theme.palette.moonstone.accent.light40,
      color: theme.palette.moonstone.accent.darkContrast
    },
    colorGhost: {
      backgroundColor: theme.palette.ui.alpha,
      color: theme.palette.font.beta
    },
    colorWarning: {
      backgroundColor: theme.palette.moonstone.support.warning40,
      color: theme.palette.moonstone.neutral.grayDark
    },
    colorDanger: {
      backgroundColor: theme.palette.moonstone.support.danger40,
      color: theme.palette.moonstone.neutral.grayDark
    },
    colorError: {
      backgroundColor: theme.palette.support.epsilon,
      color: theme.palette.support.alpha
    },
    badge: {
      position: 'static',
      transform: 'none',
      fontSize: theme.spacing.unit * 1.5,
      fontWeight: 600
    }
  };
};
var getClasses = function getClasses(_ref) {
  var variant = _ref.variant,
    color = _ref.color,
    position = _ref.position,
    _ref$classes = _ref.classes,
    root = _ref$classes.root,
    badge = _ref$classes.badge,
    myClasses = _objectWithoutProperties(_ref$classes, _excluded);
  return {
    root: (0, _classnames["default"])(root, myClasses[variant], myClasses['color' + (0, _capitalize2["default"])(color)], myClasses['position' + (0, _capitalize2["default"])(position)]),
    badge: badge
  };
};
var Badge = (0, _core.withStyles)(styles, {
  name: 'DsBadge'
})(function (_ref2) {
  var variant = _ref2.variant,
    color = _ref2.color,
    position = _ref2.position,
    classes = _ref2.classes,
    icon = _ref2.icon,
    children = _ref2.children,
    props = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/_react["default"].createElement(_core.Badge, _extends({
    classes: getClasses({
      variant: variant,
      color: color,
      position: position,
      classes: classes
    })
  }, props), children, icon);
});
Badge.propTypes = process.env.NODE_ENV !== 'production' ? {
  icon: _propTypes["default"].node,
  variant: _propTypes["default"].oneOf(['normal', 'dot', 'circle'])
} : {};
Badge.defaultProps = {
  color: 'primary',
  variant: 'normal',
  position: 'inline'
};
Badge.displayName = 'DsBadge';
var _default = Badge;
exports["default"] = _default;