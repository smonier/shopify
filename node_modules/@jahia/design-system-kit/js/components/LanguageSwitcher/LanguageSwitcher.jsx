"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _find2 = _interopRequireDefault(require("lodash/find"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _core = require("@material-ui/core");
var _Button = require("../Button");
var _Typography = require("../Typography");
var _mdiMaterialUi = require("mdi-material-ui");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var LanguageSwitcher = function LanguageSwitcher(_ref) {
  var color = _ref.color,
    lang = _ref.lang,
    languages = _ref.languages,
    onSelectLanguage = _ref.onSelectLanguage;
  var _useState = (0, _react.useState)(null),
    _useState2 = _slicedToArray(_useState, 2),
    anchorEl = _useState2[0],
    setAnchorEl = _useState2[1];
  var handleClick = function handleClick(event) {
    setAnchorEl(event.currentTarget);
  };
  var handleClose = function handleClose() {
    setAnchorEl(null);
  };
  var uppercaseFirst = function uppercaseFirst(string) {
    return string.charAt(0).toUpperCase() + string.substr(1);
  };
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, languages.length > 1 ? /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Button.Button, {
    "aria-owns": anchorEl ? 'language-switcher' : null,
    "aria-haspopup": "true",
    "data-cm-role": "language-switcher",
    size: "compact",
    color: color,
    onClick: handleClick
  }, /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    noWrap: true,
    variant: "zeta",
    color: "inherit"
  }, uppercaseFirst((0, _find2["default"])(languages, function (language) {
    return language.language === lang;
  }).displayName), "\xA0"), /*#__PURE__*/_react["default"].createElement(_mdiMaterialUi.ChevronDown, {
    fontSize: "small",
    color: "inherit"
  })), /*#__PURE__*/_react["default"].createElement(_core.Menu, {
    id: "language-switcher",
    anchorEl: anchorEl,
    open: Boolean(anchorEl),
    onClose: handleClose
  }, languages.map(function (language) {
    return /*#__PURE__*/_react["default"].createElement(_core.MenuItem, {
      key: language.language,
      selected: language.language === lang,
      onClick: function onClick() {
        onSelectLanguage(language.language);
        handleClose();
      }
    }, uppercaseFirst(language.displayName));
  }))) : /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Button.Button, {
    "aria-owns": anchorEl ? 'language-switcher' : null,
    "aria-haspopup": "true",
    "data-cm-role": "language-switcher",
    size: "compact",
    color: color,
    onClick: handleClick
  }, /*#__PURE__*/_react["default"].createElement(_Typography.Typography, {
    noWrap: true,
    variant: "zeta",
    color: "inherit"
  }, uppercaseFirst((0, _find2["default"])(languages, function (language) {
    return language.language === lang;
  }).displayName), "\xA0"))));
};
LanguageSwitcher.propTypes = {
  color: _propTypes["default"].string,
  lang: _propTypes["default"].string.isRequired,
  languages: _propTypes["default"].arrayOf(_propTypes["default"].object).isRequired,
  onSelectLanguage: _propTypes["default"].func.isRequired
};
LanguageSwitcher.defaultProps = {
  color: 'default'
};
LanguageSwitcher.displayName = 'LanguageSwitcher';
var _default = LanguageSwitcher;
exports["default"] = _default;