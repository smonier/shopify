"use strict";

var _react = _interopRequireDefault(require("react"));
var _testFramework = require("@jahia/test-framework");
var _theme = require("../../theme");
var _Button = require("../Button");
var _LanguageSwitcher = _interopRequireDefault(require("./LanguageSwitcher"));
var _core = require("@material-ui/core");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
describe('LanguageSwitcher', function () {
  var props;
  var wrapper;
  beforeEach(function () {
    props = {
      color: 'default',
      lang: 'en',
      languages: [{
        language: 'en',
        displayName: 'English'
      }],
      onSelectLanguage: jest.fn()
    };
    wrapper = (0, _testFramework.shallowWithTheme)( /*#__PURE__*/_react["default"].createElement(_LanguageSwitcher["default"], props), {}, _theme.dsGenericTheme);
  });
  it('should contain one Button component and no Menu when only one language is present', function () {
    expect(wrapper.find(_Button.Button).length).toBe(1);
    expect(wrapper.find(_core.Menu).length).toBe(0);
  });
  it('should a menu and two menu items corresponding to the languages', function () {
    props.languages.push({
      language: 'fr',
      displayName: 'French'
    });
    wrapper.setProps(props);
    expect(wrapper.find(_core.Menu).length).toBe(1);
    expect(wrapper.find(_core.MenuItem).length).toBe(2);
  });
  it('should call onSelectLanguage on language selection', function () {
    props.languages.push({
      language: 'fr',
      displayName: 'French'
    });
    wrapper.setProps(props).find(_Button.Button).simulate('click', {
      currentTarget: {}
    });
    wrapper.find('WithStyles(MenuItem)').at(0).simulate('click');
    expect(props.onSelectLanguage.mock.calls.length).toBe(1);
  });
});