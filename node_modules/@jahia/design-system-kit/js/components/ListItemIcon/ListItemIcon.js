"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _core = require("@material-ui/core");
var _excluded = ["children", "classes"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var styles = function styles(theme) {
  return {
    root: {
      marginRight: theme.spacing.unit,
      color: theme.palette.font.alpha,
      flexShrink: 0,
      display: 'inline-flex'
    }
  };
};
var getClasses = function getClasses(_ref) {
  var root = _ref.classes.root;
  return {
    root: root
  };
};
var ListItemIcon = (0, _core.withStyles)(styles, {
  name: 'DsListItemIcon'
})(function (_ref2) {
  var children = _ref2.children,
    classes = _ref2.classes,
    props = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_core.ListItemIcon, _extends({
    classes: getClasses({
      classes: classes
    })
  }, props), children);
});
ListItemIcon.propTypes = process.env.NODE_ENV !== 'production' ? {} : {};
ListItemIcon.displayName = 'DsListItemIcon';
var _default = ListItemIcon;
exports["default"] = _default;