import PropTypes from 'prop-types';
import React from 'react';
import { withStyles, AppBar, Toolbar, Button } from '@material-ui/core';
import { compose } from 'recompose';
import { Typography } from '../Typography';
var styles = function styles(theme) {
  return {
    topBar: {
      background: theme.palette.ui.gamma,
      color: theme.palette.invert.beta
    },
    topBarText: {
      fontWeight: 600,
      fontSize: '16px'
    },
    topBarButton: {
      position: 'absolute',
      right: '1.67%',
      fontStyle: 'normal',
      fontWeight: 600,
      lineHeight: '18px',
      fontSize: '14px',
      textAlign: 'right',
      color: theme.palette.invert.beta
    }
  };
};
export var ToolBar = function ToolBar(_ref) {
  var classes = _ref.classes,
    contextPath = _ref.contextPath,
    label = _ref.label,
    title = _ref.title;
  return /*#__PURE__*/React.createElement(AppBar, {
    position: "static"
  }, /*#__PURE__*/React.createElement(Toolbar, {
    className: classes.topBar
  }, /*#__PURE__*/React.createElement(Typography, {
    color: "invert",
    variant: "epsilon",
    className: classes.topBarText
  }, title), /*#__PURE__*/React.createElement(Button, {
    className: classes.topBarButton,
    onClick: function onClick() {
      window.location.href = "".concat(contextPath, "/tools");
    }
  }, /*#__PURE__*/React.createElement(Typography, {
    color: "invert",
    variant: "zeta"
  }, label))));
};
ToolBar.defaultProps = {
  contextPath: '',
  label: '',
  title: ''
};
ToolBar.propTypes = {
  classes: PropTypes.object.isRequired,
  contextPath: PropTypes.string,
  label: PropTypes.string,
  title: PropTypes.string
};
export default compose(withStyles(styles, {
  withTheme: true
}))(ToolBar);