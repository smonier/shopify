import _merge from "lodash/merge";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
import { createMuiTheme } from '@material-ui/core';
import { shape } from './shape';
import { typography } from './typography';
// Default
import { dsAppBar } from './default/appbar';
import { dsAvatar } from './default/avatar';
import { dsButton, dsButtonBase, dsIconButton } from './default/button';
import { dsCard, dsCardContent, dsCardHeader } from './default/card';
import { dsDialog, dsDialogActions, dsDialogContent, dsDialogTitle } from './default/dialog';
import { dsDivider } from './default/divider';
import { dsCheckbox } from './default/checkbox';
import { dsInput, dsInputBase } from './default/input';
import { dsMenu, dsMenuItem } from './default/menu';
import { dsPaper } from './default/paper';
import { dsSelect } from './default/select';
import { dsIcons } from './default/icon';
import { dsTable, dsTableCell, dsTableRow } from './default/table';
import { dsTab, dsTabs } from './default/tabs';
import { dsToolBar } from './default/toolbar';
import { dsToggleButton } from './default/toggle';
import { dsListItem, dsListItemIcon, dsListItemSecondaryAction, dsListItemText, dsListSubheader } from './default/list';
import { dsTypography } from './default/typography';
import { dsTooltip } from './default/tooltips';
import { dsFormControlLabel, dsFormLabel } from './default/form';
import { dsPanel, dsPanelActions, dsPanelDetails } from './default/panel';
import { dsChip } from './default/chip';
import { dsSnackbarContent } from './default/snackbar';
// Import of Dark Jahia DS palette
import { dsGenericPalette } from './palette.js';
// Import of Jahia DS shadows
import { dsShadows } from './shadows.js';
var dsGenericThemeConfig = {
  palette: dsGenericPalette,
  shape: shape,
  typography: _objectSpread(_objectSpread({}, typography), {}, {
    useNextVariants: true
  }),
  shadows: dsShadows
};
var dsThemeOverrides = function dsThemeOverrides(theme) {
  return {
    MuiAppBar: dsAppBar(theme),
    MuiAvatar: dsAvatar(theme),
    MuiButton: dsButton(theme),
    MuiButtonBase: dsButtonBase(theme),
    MuiIconButton: dsIconButton(theme),
    MuiCard: dsCard(theme),
    MuiCardContent: dsCardContent(theme),
    MuiCardHeader: dsCardHeader(theme),
    MuiCheckbox: dsCheckbox(theme),
    MuiChip: dsChip(theme),
    MuiDialogTitle: dsDialogTitle(theme),
    MuiDialog: dsDialog(theme),
    MuiDialogActions: dsDialogActions(theme),
    MuiDialogContent: dsDialogContent(theme),
    MuiDivider: dsDivider(theme),
    MuiFormLabel: dsFormLabel(theme),
    MuiFormControlLabel: dsFormControlLabel(theme),
    MuiInput: dsInput(theme),
    MuiInputBase: dsInputBase(theme),
    MuiListItem: dsListItem(theme),
    MuiListItemIcon: dsListItemIcon,
    MuiListItemSecondaryAction: dsListItemSecondaryAction,
    MuiListSubheader: dsListSubheader,
    MuiListItemText: dsListItemText,
    MuiMenu: dsMenu(theme),
    MuiMenuItem: dsMenuItem(theme),
    MuiExpansionPanel: dsPanel(theme),
    MuiExpansionPanelDetails: dsPanelDetails,
    MuiExpansionPanelActions: dsPanelActions(theme),
    MuiPaper: dsPaper(theme),
    MuiSelect: dsSelect(theme),
    MuiSnackbarContent: dsSnackbarContent(theme),
    MuiSvgIcon: dsIcons(theme),
    MuiTable: dsTable(theme),
    MuiTableRow: dsTableRow(theme),
    MuiTableCell: dsTableCell(theme),
    MuiTab: dsTab(theme),
    MuiTabs: dsTabs(theme),
    MuiToggleButton: dsToggleButton(theme),
    MuiToolbar: dsToolBar(theme),
    MuiTooltip: dsTooltip(theme),
    MuiTypography: dsTypography(theme)
  };
};
var dsGenericTheme = createMuiTheme(dsGenericThemeConfig);
_merge(dsGenericTheme, {
  overrides: dsThemeOverrides(dsGenericTheme)
});
export default dsGenericTheme;