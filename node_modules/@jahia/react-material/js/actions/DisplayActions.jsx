"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DisplayActions = void 0;
var _find2 = _interopRequireDefault(require("lodash/find"));
var _sortBy2 = _interopRequireDefault(require("lodash/sortBy"));
var _map2 = _interopRequireDefault(require("lodash/map"));
var _includes2 = _interopRequireDefault(require("lodash/includes"));
var _filter2 = _interopRequireDefault(require("lodash/filter"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _actionsRegistry = require("./actionsRegistry");
var _DisplayAction = require("./DisplayAction");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var DisplayActions = /*#__PURE__*/function (_React$Component) {
  _inherits(DisplayActions, _React$Component);
  var _super = _createSuper(DisplayActions);
  function DisplayActions(props) {
    var _this;
    _classCallCheck(this, DisplayActions);
    _this = _super.call(this, props);
    _this.observerRefs = [];
    return _this;
  }
  _createClass(DisplayActions, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props,
        target = _this$props.target,
        context = _this$props.context,
        render = _this$props.render,
        filter = _this$props.filter;
      var actionsToDisplay = (0, _filter2["default"])(_actionsRegistry.actionsRegistry.getAll(), function (action) {
        return (0, _includes2["default"])((0, _map2["default"])(action.target, 'id'), target);
      });
      actionsToDisplay = (0, _sortBy2["default"])(actionsToDisplay, [function (o) {
        var found = (0, _find2["default"])(o.target, function (t) {
          return t.id === target;
        });
        if (found && found.priority) {
          var priority = Number(found.priority);
          if (!isNaN(priority) && priority !== 0) {
            return priority;
          }
        }

        // Should be placed at the end if no priority defined, returning 'undefined' is making the ordering bug on FF and Opera
        return 99999;
      }]);
      if (filter) {
        actionsToDisplay = (0, _filter2["default"])(actionsToDisplay, filter);
      }
      return (0, _map2["default"])(actionsToDisplay, function (action) {
        return /*#__PURE__*/_react["default"].createElement(_DisplayAction.DisplayAction, {
          key: action.key,
          context: context,
          actionKey: action.key,
          render: render,
          observerRef: function observerRef(obs) {
            return _this2.observerRefs.push(obs);
          }
        });
      });
    }
  }]);
  return DisplayActions;
}(_react["default"].Component);
exports.DisplayActions = DisplayActions;
DisplayActions.defaultProps = {
  filter: null
};
DisplayActions.propTypes = {
  target: _propTypes["default"].string.isRequired,
  context: _propTypes["default"].object.isRequired,
  render: _propTypes["default"].func.isRequired,
  filter: _propTypes["default"].func
};