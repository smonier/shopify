"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toIconComponent = toIconComponent;
var _react = _interopRequireDefault(require("react"));
var _core = require("@material-ui/core");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function toIconComponent(icon, props) {
  var camelCased = function camelCased(s) {
    return s.replace(/-([a-z])/g, function (g) {
      return g[1].toUpperCase();
    });
  };
  var toComp = function toComp(node, idx) {
    if (node.nodeType === 1) {
      var _props = {
        key: idx
      };
      Array.prototype.slice.call(node.attributes).forEach(function (attr) {
        _props[camelCased(attr.name)] = attr.value;
      });
      var children = Array.prototype.slice.call(node.childNodes).map(function (child, idx) {
        return toComp(child, idx);
      });
      return /*#__PURE__*/_react["default"].createElement(node.tagName, _props, children);
    }
  };
  if (typeof icon === 'string') {
    if (icon.startsWith('<svg')) {
      var parser = new DOMParser();
      var doc = parser.parseFromString(icon, 'image/svg+xml');
      var viewBox = doc.documentElement.attributes.viewBox ? doc.documentElement.attributes.viewBox.value : null;
      var children = Array.prototype.slice.call(doc.documentElement.childNodes).map(function (child, idx) {
        return toComp(child, idx);
      });
      return /*#__PURE__*/_react["default"].createElement(_core.SvgIcon, _extends({
        viewBox: viewBox
      }, props), children);
    }
    return /*#__PURE__*/_react["default"].createElement("img", {
      src: icon
    });
  }
  if (props && icon) {
    return /*#__PURE__*/_react["default"].cloneElement(icon, props);
  }
  return icon;
}