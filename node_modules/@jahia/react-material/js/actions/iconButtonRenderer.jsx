"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iconButtonRenderer = void 0;
var _designSystemKit = require("@jahia/design-system-kit");
var _core = require("@material-ui/core");
var _reactI18next = require("react-i18next");
var _react = _interopRequireDefault(require("react"));
var _toIconComponent = require("./toIconComponent");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* eslint-disable react/prop-types */
var iconButtonRenderer = function iconButtonRenderer(buttonProps, iconProps, propagateEvent) {
  return function (_ref) {
    var context = _ref.context;
    if (context.enabled === false) {
      return false;
    }
    var button = /*#__PURE__*/_react["default"].createElement(_designSystemKit.IconButton, _extends({
      "data-sel-role": context.key,
      icon: (0, _toIconComponent.toIconComponent)(context.buttonIcon, iconProps),
      onClick: function onClick(e) {
        if (!propagateEvent) {
          e.stopPropagation();
        }
        context.onClick(context, e);
      }
    }, buttonProps));
    if (context.buttonLabel) {
      return /*#__PURE__*/_react["default"].createElement(_reactI18next.Translation, {
        ns: context.buttonLabelNamespace
      }, function (t) {
        return /*#__PURE__*/_react["default"].createElement(_core.Tooltip, {
          title: t(context.buttonLabel, context.buttonLabelParams)
        }, button);
      });
    }
    return button;
  };
};
exports.iconButtonRenderer = iconButtonRenderer;