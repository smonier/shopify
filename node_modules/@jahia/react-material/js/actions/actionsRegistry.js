"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.actionsRegistry = void 0;
var _values2 = _interopRequireDefault(require("lodash/values"));
var _map2 = _interopRequireDefault(require("lodash/map"));
var _composeActions = require("./composeActions");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
var Registry = /*#__PURE__*/function () {
  function Registry() {
    _classCallCheck(this, Registry);
    this.registry = {};
  }
  _createClass(Registry, [{
    key: "add",
    value: function add(key) {
      var actions = Array.prototype.slice.call(arguments, 1);
      var action = _composeActions.composeActions.apply(void 0, [this.registry[key]].concat(_toConsumableArray(actions)));
      action.key = key;
      if (action.target) {
        action.target = (0, _map2["default"])(action.target, function (t) {
          if (typeof t === 'string') {
            var spl = t.split(':');
            return {
              id: spl[0],
              priority: spl[1] ? spl[1] : 0
            };
          }
          return t;
        });
      }
      this.registry[key] = action;
    }
  }, {
    key: "get",
    value: function get(key) {
      return this.registry[key];
    }
  }, {
    key: "getAll",
    value: function getAll() {
      return (0, _values2["default"])(this.registry);
    }
  }]);
  return Registry;
}();
var actionsRegistry = new Registry();
exports.actionsRegistry = actionsRegistry;