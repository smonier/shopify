"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buttonRenderer = void 0;
var _designSystemKit = require("@jahia/design-system-kit");
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactI18next = require("react-i18next");
var _toIconComponent = require("./toIconComponent");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var buttonRenderer = function buttonRenderer(buttonProps, showIcon, propagateEvent, upperCaseLabel) {
  var Render = function Render(_ref) {
    var context = _ref.context;
    return context.enabled !== false && /*#__PURE__*/_react["default"].createElement(_reactI18next.Translation, {
      ns: context.buttonLabelNamespace
    }, function (t) {
      return /*#__PURE__*/_react["default"].createElement(_designSystemKit.Button, _extends({
        "data-sel-role": context.key,
        icon: showIcon && context.buttonIcon && (0, _toIconComponent.toIconComponent)(context.buttonIcon),
        onClick: function onClick(e) {
          if (!propagateEvent) {
            e.stopPropagation();
          }
          context.onClick(context, e);
        }
      }, buttonProps), /*#__PURE__*/_react["default"].createElement("span", {
        dangerouslySetInnerHTML: {
          __html: upperCaseLabel ? t(context.buttonLabel, context.buttonLabelParams).toUpperCase() : t(context.buttonLabel, context.buttonLabelParams)
        }
      }));
    });
  };
  Render.propTypes = {
    context: _propTypes["default"].object.isRequired
  };
  return Render;
};
exports.buttonRenderer = buttonRenderer;