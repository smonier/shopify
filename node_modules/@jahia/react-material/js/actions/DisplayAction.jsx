"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DisplayAction = void 0;
var _reduce2 = _interopRequireDefault(require("lodash/reduce"));
var _zipObject2 = _interopRequireDefault(require("lodash/zipObject"));
var _each2 = _interopRequireDefault(require("lodash/each"));
var _set2 = _interopRequireDefault(require("lodash/set"));
var _assign2 = _interopRequireDefault(require("lodash/assign"));
var _pickBy2 = _interopRequireDefault(require("lodash/pickBy"));
var _omit2 = _interopRequireDefault(require("lodash/omit"));
var _map2 = _interopRequireDefault(require("lodash/map"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _actionsRegistry = require("./actionsRegistry");
var _rxjs = require("rxjs");
var _operators = require("rxjs/operators");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var count = 0;
var StateActionComponent = /*#__PURE__*/function (_React$Component) {
  _inherits(StateActionComponent, _React$Component);
  var _super = _createSuper(StateActionComponent);
  function StateActionComponent(props) {
    var _this;
    _classCallCheck(this, StateActionComponent);
    _this = _super.call(this, props);
    _this.state = {};
    return _this;
  }
  _createClass(StateActionComponent, [{
    key: "render",
    value: function render() {
      var enhancedContext = _objectSpread(_objectSpread({}, this.props.context), this.state);
      if (enhancedContext.displayDisabled || enhancedContext.enabled !== false && enhancedContext.enabled !== null) {
        var Render = this.props.render;
        if (enhancedContext.actions) {
          return (0, _map2["default"])(enhancedContext.actions, function (action) {
            return /*#__PURE__*/_react["default"].createElement(Render, {
              key: action.key,
              context: _objectSpread(_objectSpread({}, enhancedContext), action)
            });
          });
        }
        return /*#__PURE__*/_react["default"].createElement(Render, {
          context: enhancedContext
        });
      }
      return false;
    }
  }]);
  return StateActionComponent;
}(_react["default"].Component);
StateActionComponent.propTypes = {
  context: _propTypes["default"].object.isRequired,
  render: _propTypes["default"].func.isRequired
};
var DisplayActionComponent = /*#__PURE__*/function (_React$Component2) {
  _inherits(DisplayActionComponent, _React$Component2);
  var _super2 = _createSuper(DisplayActionComponent);
  function DisplayActionComponent(props) {
    var _this2;
    _classCallCheck(this, DisplayActionComponent);
    _this2 = _super2.call(this, props);
    _this2.innerRef = /*#__PURE__*/_react["default"].createRef();
    _this2.state = {};
    return _this2;
  }
  _createClass(DisplayActionComponent, [{
    key: "render",
    value: function render() {
      var _this3 = this;
      var _this$props = this.props,
        context = _this$props.context,
        render = _this$props.render;
      var subscription = this.subscription;
      if (subscription) {
        subscription.unsubscribe();
      }
      var enhancedContext = _objectSpread({}, context);
      if (enhancedContext.init) {
        enhancedContext.init(enhancedContext, (0, _omit2["default"])(this.props, ['context']));
      }

      // Check observers
      var observersObj = (0, _pickBy2["default"])(enhancedContext, function (value) {
        return value instanceof _rxjs.Observable;
      });
      var keys = Object.keys(observersObj);
      if (keys.length > 0) {
        // Prepare an updateContext method for subscription - first set it as synchronous update of the context object
        var update = function update(v) {
          if (_this3.innerRef.current) {
            _this3.innerRef.current.setState(v);
          } else {
            enhancedContext = (0, _assign2["default"])(enhancedContext, v);
          }
        };

        // Concat with a sync observer to always get an initial value
        var observers = Object.values(observersObj);
        keys.forEach(function (k) {
          return (0, _set2["default"])(enhancedContext, k, null);
        });

        // Related to https://jira.jahia.org/browse/QA-11271
        // this empty subscription is auto cancelled with the first operator
        // and resolve a problem where the observer was never resolved is some cases
        (0, _each2["default"])(observers, function (observer) {
          return observer.pipe((0, _operators.first)()).subscribe();
        });

        // Combine all observers into one
        var combinedObserver = _rxjs.combineLatest.apply(void 0, observers.concat([function () {
          for (var _len = arguments.length, vals = new Array(_len), _key = 0; _key < _len; _key++) {
            vals[_key] = arguments[_key];
          }
          return (0, _zipObject2["default"])(keys, vals);
        }]));
        this.subscription = combinedObserver.subscribe(function (v) {
          return update(v);
        });
        if (this.props.observerRef) {
          this.props.observerRef(combinedObserver);
        }
      } else if (this.props.observerRef) {
        this.props.observerRef((0, _rxjs.of)(null));
      }
      return /*#__PURE__*/_react["default"].createElement(StateActionComponent, {
        ref: this.innerRef,
        context: enhancedContext,
        render: render
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.subscription) {
        this.subscription.unsubscribe();
      }
      var context = this.props.context;
      if (context.destroy) {
        context.destroy(context);
      }
    }
  }]);
  return DisplayActionComponent;
}(_react["default"].Component);
DisplayActionComponent.defaultProps = {
  observerRef: null
};
DisplayActionComponent.propTypes = {
  context: _propTypes["default"].object.isRequired,
  render: _propTypes["default"].func.isRequired,
  observerRef: _propTypes["default"].func
};
var shallowEquals = function shallowEquals(obj1, obj2) {
  return Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(function (key) {
    return obj1[key] === obj2[key];
  });
};
var DisplayAction = /*#__PURE__*/function (_React$Component3) {
  _inherits(DisplayAction, _React$Component3);
  var _super3 = _createSuper(DisplayAction);
  function DisplayAction(props) {
    var _this4;
    _classCallCheck(this, DisplayAction);
    _this4 = _super3.call(this, props);
    _this4.id = props.actionKey + '-' + count++;
    var actionKey = _this4.props.actionKey;
    var action = _actionsRegistry.actionsRegistry.get(actionKey);
    var Component = DisplayActionComponent;
    if (action.wrappers) {
      Component = (0, _reduce2["default"])(action.wrappers, _this4.wrap.bind(_assertThisInitialized(_this4)), DisplayActionComponent);
    }
    _this4.Component = Component;
    return _this4;
  }
  _createClass(DisplayAction, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return !shallowEquals(nextProps.context, this.props.context);
    }
  }, {
    key: "wrap",
    value: function wrap(Render, wrapper) {
      var _this5 = this;
      return function (props) {
        return wrapper( /*#__PURE__*/_react["default"].createElement(Render, _extends({
          key: _this5.id
        }, props)));
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        context = _this$props2.context,
        actionKey = _this$props2.actionKey,
        render = _this$props2.render,
        observerRef = _this$props2.observerRef;
      var action = _actionsRegistry.actionsRegistry.get(actionKey);
      var enhancedContext = _objectSpread(_objectSpread(_objectSpread({}, action), context), {}, {
        originalContext: context,
        id: this.id,
        actionKey: actionKey
      });
      var Component = this.Component;
      return /*#__PURE__*/_react["default"].createElement(Component, {
        key: this.id,
        context: enhancedContext,
        render: render,
        actionKey: actionKey,
        observerRef: observerRef
      });
    }
  }]);
  return DisplayAction;
}(_react["default"].Component);
exports.DisplayAction = DisplayAction;
DisplayAction.defaultProps = {
  observerRef: null
};
DisplayAction.propTypes = {
  actionKey: _propTypes["default"].string.isRequired,
  context: _propTypes["default"].object.isRequired,
  render: _propTypes["default"].func.isRequired,
  observerRef: _propTypes["default"].func
};