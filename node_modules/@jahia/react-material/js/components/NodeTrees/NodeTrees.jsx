"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NodeTrees = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _core = require("@material-ui/core");
var _recompose = require("recompose");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var styles = function styles() {
  return {
    listContainer: {
      flex: '1 0 0%',
      overflow: 'auto',
      width: '260px'
    },
    list: {
      width: 'fit-content',
      minWidth: '100%'
    }
  };
};
var NodeTreesCmp = function NodeTreesCmp(_ref) {
  var path = _ref.path,
    rootPath = _ref.rootPath,
    siteKey = _ref.siteKey,
    classes = _ref.classes,
    nodeTreeConfigs = _ref.nodeTreeConfigs,
    _setRefetch = _ref.setRefetch,
    children = _ref.children;
  var root = rootPath || '/sites/' + siteKey;
  var usedPath = path.startsWith(root) ? path : root;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.listContainer
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.list
  }, nodeTreeConfigs.map(function (nodeTreeConfig) {
    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, {
      key: nodeTreeConfig.key
    }, children({
      path: usedPath,
      rootPath: nodeTreeConfig.rootPath.startsWith(root) ? nodeTreeConfig.rootPath : root + nodeTreeConfig.rootPath,
      selectableTypes: nodeTreeConfig.selectableTypes,
      dataCmRole: nodeTreeConfig.key,
      openableTypes: nodeTreeConfig.openableTypes,
      rootLabel: nodeTreeConfig.rootLabel,
      setRefetch: function setRefetch(refetchingData) {
        return _setRefetch ? _setRefetch(nodeTreeConfig.key, refetchingData) : undefined;
      }
    }));
  })));
};
NodeTreesCmp.defaultProps = {
  rootPath: undefined,
  setRefetch: null
};
NodeTreesCmp.propTypes = {
  classes: _propTypes["default"].object.isRequired,
  path: _propTypes["default"].string.isRequired,
  siteKey: _propTypes["default"].string.isRequired,
  nodeTreeConfigs: _propTypes["default"].arrayOf(_propTypes["default"].object).isRequired,
  children: _propTypes["default"].func.isRequired,
  rootPath: _propTypes["default"].string,
  setRefetch: _propTypes["default"].func
};
var NodeTrees = (0, _recompose.compose)((0, _core.withStyles)(styles, {
  withTheme: true
}))(NodeTreesCmp);
exports.NodeTrees = NodeTrees;