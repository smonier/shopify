import React from 'react';
import { IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, withTheme } from '@material-ui/core';
import { ExpandLess, ExpandMore, CheckBoxOutlineBlank, CheckBox } from '@material-ui/icons';
import PropTypes from 'prop-types';
var PickerViewMaterialMultiple = function PickerViewMaterialMultiple(props) {
  var _this = this;
  return /*#__PURE__*/React.createElement(List, null, props.pickerEntries.map(function (entry) {
    return /*#__PURE__*/React.createElement(ListItem, {
      key: entry.path,
      button: true,
      onClick: function onClick() {
        return entry.selectable ? props.onSelectItem(entry.path, !entry.selected, true) : props.onOpenItem(entry.path, !entry.open);
      }
    }, /*#__PURE__*/React.createElement(ListItemIcon, {
      style: entry.selectable ? {} : {
        opacity: 0
      }
    }, entry.selected ? /*#__PURE__*/React.createElement(CheckBox, null) : /*#__PURE__*/React.createElement(CheckBoxOutlineBlank, null)), /*#__PURE__*/React.createElement(ListItemText, {
      inset: true,
      primary: props.textRenderer ? props.textRenderer.call(_this, entry) : entry.name,
      style: {
        paddingLeft: entry.depth * props.theme.spacing.unit
      }
    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, null, entry.openable && entry.hasChildren ? /*#__PURE__*/React.createElement(IconButton, {
      onClick: function onClick() {
        return props.onOpenItem(entry.path, !entry.open);
      }
    }, entry.open ? /*#__PURE__*/React.createElement(ExpandLess, null) : /*#__PURE__*/React.createElement(ExpandMore, null)) : null));
  }));
};
PickerViewMaterialMultiple.defaultProps = {
  onSelectItem: function onSelectItem() {},
  onOpenItem: function onOpenItem() {},
  textRenderer: function textRenderer() {}
};
PickerViewMaterialMultiple.propTypes = {
  pickerEntries: PropTypes.array.isRequired,
  onSelectItem: PropTypes.func,
  onOpenItem: PropTypes.func,
  textRenderer: PropTypes.func,
  theme: PropTypes.object.isRequired
};
PickerViewMaterialMultiple = withTheme()(PickerViewMaterialMultiple);
export { PickerViewMaterialMultiple };