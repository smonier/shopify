{"version":3,"sources":["TablePagination.tsx"],"names":["React","clsx","Dropdown","Typography","Button","ChevronLeft","ChevronRight","ChevronLastPage","ChevronFirstPage","cssClass","cssClass32","cssClass16","TablePagination","className","label","rowsPerPage","rowsPerPageOptions","totalNumberOfRows","currentPage","onRowsPerPageChange","onPageChange","props","Error","indexOf","lastPage","Math","ceil","visibleRowsRangeLeft","visibleRowsRangeRight","min","map","opt","toString","value","event","item","parseInt","of","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\nimport {TablePaginationProps} from './TablePagination.types';\nimport {Dropdown, Typography, Button} from '~/components';\nimport {ChevronLeft, ChevronRight, ChevronLastPage, ChevronFirstPage} from '~/icons';\nimport './TablePagination.scss';\n\nconst cssClass = 'moonstone-tablePagination';\nconst cssClass32 = 'moonstone-marginRight32';\nconst cssClass16 = 'moonstone-marginRight16';\n\nexport const TablePagination: React.FC<TablePaginationProps> = ({\n    className,\n    label,\n    rowsPerPage,\n    rowsPerPageOptions,\n    totalNumberOfRows,\n    currentPage,\n    onRowsPerPageChange,\n    onPageChange,\n    ...props\n}) => {\n\n    if (currentPage < 1) {\n        throw new Error(\"currentPage must always be >= 1\");\n    }\n\n    if (rowsPerPageOptions.indexOf(rowsPerPage) === -1) {\n        throw new Error(\"rowsPerPage must exist in rowsPerPageOptions\");\n    }\n\n    const lastPage = Math.ceil(totalNumberOfRows / rowsPerPage);\n    const visibleRowsRangeLeft = (currentPage - 1) * rowsPerPage + 1;\n    const visibleRowsRangeRight = Math.min(totalNumberOfRows, currentPage * rowsPerPage);\n\n    return (\n        <div className={clsx(cssClass, 'flexRow_reverse', 'alignCenter', className)} {...props}>\n            <Typography variant='caption'>{label.rowsPerPage}</Typography>\n            <Dropdown className={clsx('alignCenter', cssClass16)}\n                      data-sel-role=\"table-pagination-dropdown-rows-per-page\"\n                      data={rowsPerPageOptions.map(opt => ({label: opt.toString(), value: opt.toString()}))}\n                      value={rowsPerPage.toString()}\n                      label={rowsPerPage.toString()}\n                      onChange={(event: any, item: any) => onRowsPerPageChange(parseInt(item.value, 0))}/>\n            <Typography variant='caption'\n                className={clsx(cssClass, 'flexRow_reverse', 'alignCenter', cssClass32)}\n                data-sel-role=\"table-pagination-total-rows\">\n                {`${visibleRowsRangeLeft}-${visibleRowsRangeRight} ${label.of} ${totalNumberOfRows}`}\n            </Typography>\n            <Button className={clsx(cssClass32)}\n                icon={<ChevronFirstPage/>}\n                variant=\"ghost\"\n                data-sel-role=\"table-pagination-button-first-page\"\n                isDisabled={currentPage === 1}\n                onClick={() => onPageChange(1)}/>\n            <Button className={clsx(cssClass32)}\n                icon={<ChevronLeft/>}\n                variant=\"ghost\"\n                data-sel-role=\"table-pagination-button-previous-page\"\n                isDisabled={currentPage === 1}\n                onClick={() => onPageChange(currentPage - 1)}/>\n            <Button className={clsx(cssClass32)}\n                icon={<ChevronRight/>}\n                variant=\"ghost\"\n                data-sel-role=\"table-pagination-button-next-page\"\n                isDisabled={lastPage === currentPage}\n                onClick={() => onPageChange(currentPage + 1)}/>\n            <Button className={clsx(cssClass16)}\n                icon={<ChevronLastPage/>}\n                variant=\"ghost\"\n                data-sel-role=\"table-pagination-button-last-page\"\n                isDisabled={lastPage === currentPage}\n                onClick={() => onPageChange(lastPage)}/>\n        </div>\n    )\n};\n\nTablePagination.displayName = 'TablePagination';\nTablePagination.defaultProps = {\n    rowsPerPage: 10,\n    rowsPerPageOptions: [5, 10, 25],\n    label: {\n        rowsPerPage: 'Rows per page',\n        of: 'of'\n    }\n};\n"]}