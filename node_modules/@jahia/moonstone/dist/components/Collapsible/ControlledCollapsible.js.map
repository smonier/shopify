{"version":3,"sources":["ControlledCollapsible.tsx"],"names":["React","useEffect","useRef","clsx","Typography","ChevronRight","ControlledCollapsibleForwardRef","ref","label","className","children","onClick","undefined","id","isExpanded","other","classNameProps","topDivRef","buttonRef","observer","IntersectionObserver","entries","current","intersectionRatio","classList","add","remove","threshold","observe","unobserve","e","ControlledCollapsible","forwardRef","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiCC,SAAjC,EAA4CC,MAA5C,QAAyD,OAAzD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA;AAEA,SAAQC,UAAR;AACA,SAAQC,YAAR;;AAEA,IAAMC,+BAAiG,GAAG,SAApGA,+BAAoG,OAQvGC,GARuG,EAQ/F;AAAA,MAPPC,KAOO,QAPPA,KAOO;AAAA,MANPC,SAMO,QANPA,SAMO;AAAA,MALPC,QAKO,QALPA,QAKO;AAAA,0BAJPC,OAIO;AAAA,MAJPA,QAIO,6BAJG;AAAA,WAAMC,SAAN;AAAA,GAIH;AAAA,qBAHPC,EAGO;AAAA,MAHPA,EAGO,wBAHF,IAGE;AAAA,6BAFPC,UAEO;AAAA,MAFPA,UAEO,gCAFM,KAEN;AAAA,MADJC,KACI;;AACP,MAAMC,cAAc,GAAGb,IAAI,CACvB,uBADuB,EAEvBM,SAFuB,CAA3B;AAKA,MAAMQ,SAA2C,GAAGf,MAAM,EAA1D;AACA,MAAMgB,SAA8C,GAAGhB,MAAM,EAA7D;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMkB,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AACjD,UAAIH,SAAS,CAACI,OAAd,EAAuB;AACnB,YAAID,OAAO,CAAC,CAAD,CAAP,CAAWE,iBAAX,KAAiC,CAArC,EAAwC;AACpCL,UAAAA,SAAS,CAACI,OAAV,CAAkBE,SAAlB,CAA4BC,GAA5B,CAAgC,qCAAhC;AACH,SAFD,MAEO,IAAIJ,OAAO,CAAC,CAAD,CAAP,CAAWE,iBAAX,KAAiC,CAArC,EAAwC;AAC3CL,UAAAA,SAAS,CAACI,OAAV,CAAkBE,SAAlB,CAA4BE,MAA5B,CAAmC,qCAAnC;AACH;AACJ;AACJ,KARgB,EAQd;AAACC,MAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAZ,KARc,CAAjB;;AAUA,QAAIb,UAAJ,EAAgB;AACZK,MAAAA,QAAQ,CAACS,OAAT,CAAiBX,SAAS,CAACK,OAA3B;AACA,aAAO,YAAM;AACT,YAAIJ,SAAS,CAACI,OAAd,EAAuB;AACnBJ,UAAAA,SAAS,CAACI,OAAV,CAAkBE,SAAlB,CAA4BE,MAA5B,CAAmC,qCAAnC;AACH;;AAEDP,QAAAA,QAAQ,CAACU,SAAT,CAAmBZ,SAAS,CAACK,OAA7B;AACH,OAND;AAOH;AACJ,GArBQ,EAqBN,CAACR,UAAD,CArBM,CAAT;AAuBA,sBACI;AACI,IAAA,GAAG,EAAEP,GADT;AAEI,IAAA,SAAS,EAAES;AAFf,KAGQD,KAHR,gBAKI;AAAK,IAAA,GAAG,EAAEE,SAAV;AAAqB,IAAA,SAAS,EAAC;AAA/B,IALJ,eAMI;AACI,IAAA,GAAG,EAAEC,SADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAEf,IAAI,CAAC,8BAAD,EAAiC;AAAC,+CAAyCW;AAA1C,KAAjC,EAAwF,SAAxF,EAAmG,aAAnG,CAHnB;AAII,qBAAeA,UAJnB;AAKI,qBAAeD,EALnB;AAMI,IAAA,OAAO,EAAE,iBAAAiB,CAAC;AAAA,aAAInB,QAAO,CAACmB,CAAD,CAAX;AAAA;AANd,kBAQI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAE3B,IAAI,CAAC,4BAAD,EAA+B;AAAC,6CAAuCW;AAAxC,KAA/B,CAA7B;AAAkH,IAAA,IAAI,EAAC;AAAvH,IARJ,eASI,oBAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,SAAS,EAAC,MAHd;AAII,IAAA,OAAO,EAAC;AAJZ,KAMKN,KANL,CATJ,CANJ,eAwBI;AAAK,IAAA,EAAE,EAAEK,EAAT;AACK,IAAA,SAAS,EAAEV,IAAI,CAAC,CAACW,UAAU,GAAG,wCAAH,GAA8C,yCAAzD,CAAD,CADpB;AAEK,IAAA,MAAM,EAAE,CAACA;AAFd,KAIKJ,QAJL,CAxBJ,CADJ;AAiCH,CAzED;;AA2EA,OAAO,IAAMqB,qBAAqB,gBAAG/B,KAAK,CAACgC,UAAN,CAAiB1B,+BAAjB,CAA9B;AAEPyB,qBAAqB,CAACE,WAAtB,GAAoC,uBAApC","sourcesContent":["import React, {MutableRefObject, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport './Collapsible.scss';\nimport {CollapsibleProps} from './Collapsible.types';\nimport {Typography} from '~/components';\nimport {ChevronRight} from '~/icons/components';\n\nconst ControlledCollapsibleForwardRef: React.ForwardRefRenderFunction<HTMLDivElement, CollapsibleProps> = ({\n    label,\n    className,\n    children,\n    onClick = () => undefined,\n    id = null,\n    isExpanded = false,\n    ...other\n}, ref) => {\n    const classNameProps = clsx(\n        'moonstone-collapsible',\n        className\n    );\n\n    const topDivRef: MutableRefObject<HTMLDivElement> = useRef();\n    const buttonRef: MutableRefObject<HTMLButtonElement> = useRef();\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            if (buttonRef.current) {\n                if (entries[0].intersectionRatio === 0) {\n                    buttonRef.current.classList.add('moonstone-collapsible_button_sticky');\n                } else if (entries[0].intersectionRatio === 1) {\n                    buttonRef.current.classList.remove('moonstone-collapsible_button_sticky');\n                }\n            }\n        }, {threshold: [0, 1]});\n\n        if (isExpanded) {\n            observer.observe(topDivRef.current);\n            return () => {\n                if (buttonRef.current) {\n                    buttonRef.current.classList.remove('moonstone-collapsible_button_sticky');\n                }\n\n                observer.unobserve(topDivRef.current);\n            };\n        }\n    }, [isExpanded]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNameProps}\n            {...other}\n        >\n            <div ref={topDivRef} className=\"moonstone-collapsible_topdiv\"/>\n            <button\n                ref={buttonRef}\n                type=\"button\"\n                className={clsx('moonstone-collapsible_button', {'moonstone-collapsible_button_expanded': isExpanded}, 'flexRow', 'alignCenter')}\n                aria-expanded={isExpanded}\n                aria-controls={id}\n                onClick={e => onClick(e)}\n            >\n                <ChevronRight className={clsx('moonstone-collapsible_icon', {'moonstone-collapsible_icon_expanded': isExpanded})} size=\"big\"/>\n                <Typography\n                    isNowrap\n                    isUpperCase\n                    component=\"span\"\n                    variant=\"heading\"\n                >\n                    {label}\n                </Typography>\n            </button>\n            <div id={id}\n                 className={clsx([isExpanded ? 'moonstone-collapsible_content_expanded' : 'moonstone-collapsible_content_collapsed'])}\n                 hidden={!isExpanded}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport const ControlledCollapsible = React.forwardRef(ControlledCollapsibleForwardRef);\n\nControlledCollapsible.displayName = 'ControlledCollapsible';\n"]}