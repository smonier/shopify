{"version":3,"sources":["Button.tsx"],"names":["React","useRef","clsx","Typography","Loader","Button","label","size","isReversed","isDisabled","isLoading","icon","variant","color","className","isHtml","onClick","undefined","props","typoWeight","ButtonEl","handleOnClick","e","current","blur","LoaderReversed","Boolean","displayName"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport clsx from 'clsx';\nimport './Button.scss';\nimport {Typography} from '../Typography';\nimport {TypographyWeight} from '~/components/Typography/Typography.types';\nimport {ButtonProps} from './Button.types';\nimport {Loader} from '~/components/Loader';\n\nexport const Button: React.FC<ButtonProps> = ({\n    label = '',\n    size = 'default',\n    isReversed = false,\n    isDisabled = false,\n    isLoading = false,\n    icon = null,\n    variant = 'default',\n    color = 'default',\n    className = null,\n    isHtml = false,\n    onClick = () => undefined,\n    ...props\n}) => {\n    let typoWeight: TypographyWeight = 'default';\n    const ButtonEl = useRef(null);\n\n    if (size === 'small') {\n        typoWeight = 'light';\n    }\n\n    if (size === 'big') {\n        typoWeight = 'semiBold';\n    }\n\n    const handleOnClick: React.MouseEventHandler = e => {\n        onClick(e);\n        ButtonEl.current.blur();\n    };\n\n    const LoaderReversed = Boolean(variant === 'default' && (color === 'accent' || color === 'danger'));\n\n    return (\n        <button\n            ref={ButtonEl}\n            className={clsx(\n                'moonstone-button',\n                `moonstone-size_${size}`,\n                `moonstone-variant_${variant}`,\n                `moonstone-color_${color}`,\n                {'moonstone-icon': (icon && label)},\n                {'moonstone-icon-button': !label},\n                {'moonstone-reverse': isReversed},\n                {'moonstone-button_loading': isLoading},\n                className\n            )}\n            type=\"button\"\n            disabled={isDisabled}\n            onClick={e => handleOnClick(e)}\n            {...props}\n        >\n            {isLoading && <Loader size=\"small\" isReversed={LoaderReversed} className={clsx('moonstone-button_loader')}/>}\n            {icon && <icon.type {...icon.props} size={(size === 'big') ? 'default' : size}/>}\n            {label && (\n                <Typography\n                    isNowrap\n                    component=\"span\"\n                    variant=\"button\"\n                    isUpperCase={size === 'big'}\n                    weight={typoWeight}\n                    className={clsx('flexFluid')}\n                    isHtml={isHtml}\n                >\n                    {label}\n                </Typography>\n            )}\n        </button>\n    );\n};\n\nButton.displayName = 'Button';\n"]}