import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["className", "checked", "id", "value", "label", "description", "isDisabled", "isReadOnly"];
import React from 'react';
import clsx from 'clsx';
import "./Radio.css";
import { RadioChecked, RadioUnchecked } from "../../icons";
import { Typography } from "./..";
export var ControlledRadio = function ControlledRadio(_ref) {
  var className = _ref.className,
      _ref$checked = _ref.checked,
      checked = _ref$checked === void 0 ? false : _ref$checked,
      id = _ref.id,
      value = _ref.value,
      label = _ref.label,
      description = _ref.description,
      isDisabled = _ref.isDisabled,
      isReadOnly = _ref.isReadOnly,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Typography, {
    className: clsx('moonstone-radio-container flexCol', className),
    "aria-readonly": isReadOnly,
    "aria-disabled": isDisabled,
    variant: "body",
    weight: "default",
    component: "label"
  }, /*#__PURE__*/React.createElement("div", {
    className: clsx('flexRow alignCenter')
  }, /*#__PURE__*/React.createElement("div", {
    className: clsx('moonstone-radio')
  }, /*#__PURE__*/React.createElement("input", _extends({}, props, {
    className: clsx('moonstone-radio_input'),
    type: "radio",
    checked: checked,
    disabled: isDisabled,
    "aria-readonly": isReadOnly,
    id: id,
    value: value,
    "aria-labelledby": "".concat(id, "-label"),
    "aria-describedby": "".concat(id, "-description")
  })), /*#__PURE__*/React.createElement(RadioChecked, {
    className: clsx('moonstone-radio_icon moonstone-radio_iconChecked')
  }), /*#__PURE__*/React.createElement(RadioUnchecked, {
    className: clsx('moonstone-radio_icon moonstone-radio_iconUnchecked')
  })), /*#__PURE__*/React.createElement(Typography, {
    id: "".concat(id, "-label"),
    variant: "body",
    weight: "default",
    component: "span",
    className: clsx('moonstone-radio-label')
  }, label)), description && /*#__PURE__*/React.createElement(Typography, {
    id: "".concat(id, "-description"),
    variant: "caption",
    weight: "default",
    component: "span",
    className: clsx('moonstone-radio-description flexRow')
  }, description));
};
ControlledRadio.displayName = 'ControlledRadio';
//# sourceMappingURL=ControlledRadio.js.map
