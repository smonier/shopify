{"version":3,"sources":["UncontrolledRadio.tsx"],"names":["React","useState","ControlledRadio","UncontrolledRadio","defaultChecked","props","checked","setChecked","event","target","displayName"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA;AAEA,SAAQC,eAAR;AAEA,OAAO,IAAMC,iBAAuC,GAAG,SAA1CA,iBAA0C,OAAwC;AAAA,iCAAtCC,cAAsC;AAAA,MAAtCA,cAAsC,oCAArB,KAAqB;AAAA,MAAXC,KAAW;;AAC3F,kBAA8BJ,QAAQ,CAACG,cAAD,CAAtC;AAAA;AAAA,MAAOE,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,sBACI,oBAAC,eAAD,eAAqBF,KAArB;AACiB,IAAA,OAAO,EAAEC,OAD1B;AAEiB,IAAA,QAAQ,EAAE,kBAAAE,KAAK,EAAI;AACZD,MAAAA,UAAU,CAACC,KAAK,CAACC,MAAN,CAAaH,OAAd,CAAV;AACH;AAJrB,KADJ;AAQH,CAXM;AAaPH,iBAAiB,CAACO,WAAlB,GAAgC,mBAAhC","sourcesContent":["import React, {useState} from 'react';\nimport './Radio.scss';\nimport {RadioProps} from './Radio.types';\nimport {ControlledRadio} from '~/components/Radio/ControlledRadio';\n\nexport const UncontrolledRadio: React.FC<RadioProps> = ({defaultChecked = false, ...props}) => {\n    const [checked, setChecked] = useState(defaultChecked);\n\n    return (\n        <ControlledRadio {...props}\n                         checked={checked}\n                         onChange={event => {\n                                setChecked(event.target.checked);\n                            }}\n        />\n    );\n};\n\nUncontrolledRadio.displayName = 'UncontrolledRadio';\n"]}