{"version":3,"sources":["Typography.tsx"],"names":["React","clsx","filterOutIsHtml","props","newProps","isHtml","Typography","children","component","variant","weight","className","hasLineThrough","isItalic","isUpperCase","isNowrap","createElement","displayName"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA;;AAGA;AACA;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAA4B;AAChD,MAAMC,QAAQ,qBAAOD,KAAP,CAAd;;AACA,MAAIC,QAAQ,CAACC,MAAb,EAAqB;AACjB,WAAOD,QAAQ,CAACC,MAAhB;AACH;;AAED,SAAOD,QAAP;AACH,CAPD;;AASA,OAAO,IAAME,UAAqC,GAAG,SAAxCA,UAAwC,OAY/C;AAAA,2BAXFC,QAWE;AAAA,MAXFA,QAWE,8BAXS,EAWT;AAAA,4BAVFC,SAUE;AAAA,MAVFA,SAUE,+BAVU,GAUV;AAAA,0BATFC,OASE;AAAA,MATFA,OASE,6BATQ,MASR;AAAA,yBARFC,MAQE;AAAA,MARFA,MAQE,4BARO,SAQP;AAAA,4BAPFC,SAOE;AAAA,MAPFA,SAOE,+BAPU,EAOV;AAAA,iCANFC,cAME;AAAA,MANFA,cAME,oCANe,KAMf;AAAA,2BALFC,QAKE;AAAA,MALFA,QAKE,8BALS,KAKT;AAAA,8BAJFC,WAIE;AAAA,MAJFA,WAIE,iCAJY,KAIZ;AAAA,2BAHFC,QAGE;AAAA,MAHFA,QAGE,8BAHS,KAGT;AAAA,yBAFFV,MAEE;AAAA,MAFFA,MAEE,4BAFO,KAEP;AAAA,MADCF,KACD;;AACF,MAAI,CAACI,QAAL,EAAe;AACX,WAAO,IAAP;AACH;;AAED,sBAAOP,KAAK,CAACgB,aAAN,CACHR,SADG,kCAGIN,eAAe,CAACC,KAAD,CAHnB;AAICQ,IAAAA,SAAS,EAAEV,IAAI,CACX,sBADW,8BAEUQ,OAFV,8BAGSC,MAHT,GAIXC,SAJW,EAKX;AAAC,0BAAoBI;AAArB,KALW,EAMX;AAAC,0BAAoBF;AAArB,KANW,EAOX;AAAC,6BAAuBC;AAAxB,KAPW,EAQX;AAAC,+BAAyBF;AAA1B,KARW;AAJhB,MAcHL,QAdG,CAAP;AAgBH,CAjCM;AAmCPD,UAAU,CAACW,WAAX,GAAyB,YAAzB","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport './Typography.scss';\nimport {TypographyProps} from './Typography.types';\n\n// IsHtml prop should eventually be removed (along with this function) as children supports all React Node types\n// including strings and HTML markup\nconst filterOutIsHtml = (props: TypographyProps) => {\n    const newProps = {...props};\n    if (newProps.isHtml) {\n        delete newProps.isHtml;\n    }\n\n    return newProps;\n};\n\nexport const Typography: React.FC<TypographyProps> = ({\n    children = '',\n    component = 'p',\n    variant = 'body',\n    weight = 'default',\n    className = '',\n    hasLineThrough = false,\n    isItalic = false,\n    isUpperCase = false,\n    isNowrap = false,\n    isHtml = false,\n    ...props\n}) => {\n    if (!children) {\n        return null\n    }\n\n    return React.createElement(\n        component,\n        {\n            ...filterOutIsHtml(props),\n            className: clsx(\n                'moonstone-typography',\n                `moonstone-variant_${variant}`,\n                `moonstone-weight_${weight}`,\n                className,\n                {'moonstone-nowrap': isNowrap},\n                {'moonstone-italic': isItalic},\n                {'moonstone-upperCase': isUpperCase},\n                {'moonstone-lineThrough': hasLineThrough})\n        },\n        children\n    );\n}\n\nTypography.displayName = 'Typography';\n"]}