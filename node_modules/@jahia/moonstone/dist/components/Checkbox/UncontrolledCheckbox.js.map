{"version":3,"sources":["UncontrolledCheckbox.tsx"],"names":["React","clsx","useFocusRing","capitalize","UncontrolledCheckbox","forwardRef","props","ref","className","indeterminate","checked","size","otherProps","defaultRef","useRef","resolvedRef","ariaCheckedValue","isFocusVisible","focusProps","useEffect","current","displayName"],"mappings":";;AAAA,OAAOA,KAAP,MAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,UAAR;AAGA;AAEA,OAAO,IAAMC,oBAAoB,gBAAGJ,KAAK,CAACK,UAAN,CAChC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAERC,SAFQ,GAORF,KAPQ,CAERE,SAFQ;AAAA,MAGRC,aAHQ,GAORH,KAPQ,CAGRG,aAHQ;AAAA,MAIRC,OAJQ,GAORJ,KAPQ,CAIRI,OAJQ;AAAA,oBAORJ,KAPQ,CAKRK,IALQ;AAAA,MAKRA,IALQ,4BAKD,SALC;AAAA,MAMLC,UANK,4BAORN,KAPQ;;AAQZ,MAAMO,UAAU,GAAGb,KAAK,CAACc,MAAN,CAA+B,IAA/B,CAAnB;AACA,MAAMC,WAAW,GAAGR,GAAG,IAAIM,UAA3B;AACA,MAAIG,gBAA6B,GAAG,OAApC;;AAVY,sBAWyBd,YAAY,EAXrC;AAAA,MAWLe,cAXK,iBAWLA,cAXK;AAAA,MAWWC,UAXX,iBAWWA,UAXX;;AAaZ,MAAIT,aAAJ,EAAmB;AACfO,IAAAA,gBAAgB,GAAG,OAAnB;AACH,GAFD,MAEO,IAAIN,OAAJ,EAAa;AAChBM,IAAAA,gBAAgB,GAAG,MAAnB;AACH;;AAEDhB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,YAAM;AACjBJ,IAAAA,WAAD,CAAoDK,OAApD,CAA4DX,aAA5D,GAA4EA,aAA5E;AACH,GAFD,EAEG,CAACM,WAAD,EAAcN,aAAd,CAFH;AAIA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAER,IAAI,CAAC,oBAAD,EAAuBO,SAAvB;AAApB,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAEP,IAAI,CAAC,0BAAD,mCAAuDE,UAAU,CAACQ,IAAD,CAAjE,GAA2E;AAAC,kBAAYM;AAAb,KAA3E,CAFnB;AAGI,IAAA,GAAG,EAAEF,WAHT;AAII,oBAAcC;AAJlB,KAKQJ,UALR,EAMQM,UANR,EADJ,eASI;AAAK,IAAA,SAAS,EAAEjB,IAAI,CAAC,yBAAD,mCAAsDE,UAAU,CAACQ,IAAD,CAAhE,EAApB;AAA+F,IAAA,OAAO,EAAC;AAAvG,KACMF,aAAa,gBACT;AAAM,IAAA,CAAC,EAAC,qBAAR;AAA8B,IAAA,aAAa,EAAC;AAA5C,IADS,gBAET;AAAM,IAAA,CAAC,EAAC,yBAAR;AAAkC,IAAA,aAAa,EAAC;AAAhD,IAHV,CATJ,CADJ,CADJ;AAoBH,CA5C+B,CAA7B;AA+CPL,oBAAoB,CAACiB,WAArB,GAAmC,sBAAnC","sourcesContent":["import React, {MutableRefObject, RefObject} from 'react';\nimport clsx from 'clsx';\nimport {useFocusRing} from '@react-aria/focus';\nimport {capitalize} from '~/utils/helpers';\n\nimport {AriaChecked, UncontrolledCheckboxProps} from './UncontrolledCheckbox.types';\nimport './Checkbox.scss';\n\nexport const UncontrolledCheckbox = React.forwardRef<HTMLInputElement, UncontrolledCheckboxProps>(\n    (props, ref) => {\n        const {\n            className,\n            indeterminate,\n            checked,\n            size = 'default',\n            ...otherProps\n        } = props;\n        const defaultRef = React.useRef<HTMLInputElement>(null);\n        const resolvedRef = ref || defaultRef;\n        let ariaCheckedValue: AriaChecked = 'false';\n        const {isFocusVisible, focusProps} = useFocusRing();\n\n        if (indeterminate) {\n            ariaCheckedValue = 'mixed';\n        } else if (checked) {\n            ariaCheckedValue = 'true';\n        }\n\n        React.useEffect(() => {\n            (resolvedRef as MutableRefObject<HTMLInputElement>).current.indeterminate = indeterminate;\n        }, [resolvedRef, indeterminate]);\n\n        return (\n            <>\n                <div className={clsx('moonstone-checkbox', className)}>\n                    <input\n                        type=\"checkbox\"\n                        className={clsx('moonstone-checkbox_input', `moonstone-checkbox_size${capitalize(size)}`, {'hasFocus': isFocusVisible})}\n                        ref={resolvedRef}\n                        aria-checked={ariaCheckedValue}\n                        {...otherProps}\n                        {...focusProps}\n                    />\n                    <svg className={clsx('moonstone-checkbox_icon', `moonstone-checkbox_size${capitalize(size)}`)} viewBox='0 0 21 21'>\n                        { indeterminate\n                            ? <path d=\"M4.5 10.5L16.5 10.5\" strokeLinecap=\"round\"/>\n                            : <path d=\"M5 10.75L8.5 14.25L16 6\" strokeLinecap=\"round\"/>\n                        }\n                    </svg>\n                </div>\n            </>\n        );\n    }\n);\n\nUncontrolledCheckbox.displayName = 'UncontrolledCheckbox';\n"]}