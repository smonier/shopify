{"version":3,"sources":["ControlledCheckbox.tsx"],"names":["React","clsx","useCheckbox","useToggleState","useFocusRing","capitalize","ControlledCheckbox","props","className","isIndeterminate","size","inputRef","useRef","inputProps","isFocusVisible","focusProps","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,UAAR;AAGA;AAEA,OAAO,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAwD,CAAAC,KAAK,EAAI;AAAA,MAEtEC,SAFsE,GAKtED,KALsE,CAEtEC,SAFsE;AAAA,8BAKtED,KALsE,CAGtEE,eAHsE;AAAA,MAGtEA,eAHsE,sCAGpD,KAHoD;AAAA,oBAKtEF,KALsE,CAItEG,IAJsE;AAAA,MAItEA,IAJsE,4BAI/D,SAJ+D;AAM1E,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAA+B,IAA/B,CAAjB;;AAN0E,qBAOrDV,WAAW,CAACK,KAAD,EAAQJ,cAAc,CAACI,KAAD,CAAtB,EAA+BI,QAA/B,CAP0C;AAAA,MAOnEE,UAPmE,gBAOnEA,UAPmE;;AAAA,sBAQrCT,YAAY,EARyB;AAAA,MAQnEU,cARmE,iBAQnEA,cARmE;AAAA,MAQnDC,UARmD,iBAQnDA,UARmD;;AAU1E,sBACI;AAAK,IAAA,SAAS,EAAEd,IAAI,CAAC,oBAAD,EAAuBO,SAAvB;AAApB,kBACI;AACI,IAAA,SAAS,EAAEP,IAAI,CAAC,0BAAD,mCAAuDI,UAAU,CAACK,IAAD,CAAjE,GAA2E;AAAC,kBAAYI;AAAb,KAA3E,CADnB;AAEI,IAAA,GAAG,EAAEH;AAFT,KAGQE,UAHR,EAIQE,UAJR,EADJ,eAOI;AAAK,IAAA,SAAS,EAAEd,IAAI,CAAC,yBAAD,mCAAsDI,UAAU,CAACK,IAAD,CAAhE,EAApB;AAA+F,IAAA,OAAO,EAAC;AAAvG,KACMD,eAAe,gBACX;AAAM,IAAA,CAAC,EAAC,qBAAR;AAA8B,IAAA,aAAa,EAAC;AAA5C,IADW,gBAEX;AAAM,IAAA,CAAC,EAAC,yBAAR;AAAkC,IAAA,aAAa,EAAC;AAAhD,IAHV,CAPJ,CADJ;AAgBH,CA1BM;AA4BPH,kBAAkB,CAACU,WAAnB,GAAiC,oBAAjC","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport {useCheckbox} from '@react-aria/checkbox';\nimport {useToggleState} from '@react-stately/toggle';\nimport {useFocusRing} from '@react-aria/focus';\nimport {capitalize} from '~/utils/helpers';\n\nimport {ControlledCheckboxProps} from './ControlledCheckbox.types';\nimport './Checkbox.scss';\n\nexport const ControlledCheckbox: React.FC<ControlledCheckboxProps> = props => {\n    const {\n        className,\n        isIndeterminate = false,\n        size = 'default'\n    } = props;\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const {inputProps} = useCheckbox(props, useToggleState(props), inputRef);\n    const {isFocusVisible, focusProps} = useFocusRing();\n\n    return (\n        <div className={clsx('moonstone-checkbox', className)}>\n            <input\n                className={clsx('moonstone-checkbox_input', `moonstone-checkbox_size${capitalize(size)}`, {'hasFocus': isFocusVisible})}\n                ref={inputRef}\n                {...inputProps}\n                {...focusProps}\n            />\n            <svg className={clsx('moonstone-checkbox_icon', `moonstone-checkbox_size${capitalize(size)}`)} viewBox='0 0 21 21'>\n                { isIndeterminate\n                    ? <path d=\"M4.5 10.5L16.5 10.5\" strokeLinecap=\"round\"/>\n                    : <path d=\"M5 10.75L8.5 14.25L16 6\" strokeLinecap=\"round\"/>\n                }\n            </svg>\n        </div>\n    );\n};\n\nControlledCheckbox.displayName = 'ControlledCheckbox';\n"]}