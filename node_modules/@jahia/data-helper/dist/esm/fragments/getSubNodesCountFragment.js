import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _templateObject;
import gql from 'graphql-tag';
import { encodeName } from "./encodeName";
var fragments = {};
export var getSubNodesCountFragment = function getSubNodesCountFragment(name) {
  var encodedName = getEncodedSubNodesCountName(name);
  if (!fragments[encodedName]) {
    fragments[encodedName] = {
      applyFor: 'node',
      variables: _defineProperty({}, encodedName, '[String!]!'),
      gql: gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["fragment SubNodesCount_", " on JCRNode {\n                ", ": children(typesFilter: {types: $", "}) {\n                    pageInfo {\n                        totalCount\n                    }\n                }\n            }"])), encodedName, encodedName, encodedName)
    };
  }
  return {
    fragment: fragments[encodedName],
    variables: _defineProperty({}, encodedName, [name])
  };
};
export var getEncodedSubNodesCountName = function getEncodedSubNodesCountName(name) {
  return 'subNodesCount_' + encodeName(name);
};
//# sourceMappingURL=getSubNodesCountFragment.js.map
