{"version":3,"names":["_graphqlTag","_interopRequireDefault","require","_fragments","_getPermissionFragment","_getIsNodeTypeFragment","_getSubNodesCountFragment","_templateObject","_templateObject2","_templateObject3","_templateObject4","getBaseQueryAndVariables","variables","paths","baseQuery","gql","_taggedTemplateLiteral2","nodeCacheRequiredFields","isExternal","generatedVariables","skip","uuid","length","uuids","path","validOptions","exports","getQuery","schemaResult","options","arguments","undefined","fragments","_getBaseQueryAndVaria","getDisplayName","push","displayName","language","Error","getPrimaryNodeType","primaryNodeType","displayLanguage","displayLanguageSet","getParent","parentNode","getAggregatedPublicationInfo","supportsExistsInLive","__type","fields","find","field","name","aggregatedPublicationInfoWithExistInLive","aggregatedPublicationInfo","aggregatedPublicationInfoSubNodes","Boolean","subNodes","aggregatedPublicationInfoIncludeReference","reference","getOperationSupport","operationSupport","getPermissions","forEach","_getPermissionFragmen","getPermissionFragment","fragment","fragmentVariables","Object","assign","getSitePermissions","_getSitePermissionFra","getSitePermissionFragment","getIsNodeTypes","_getNodeTypeFragment","getNodeTypeFragment","getProperties","getPropertiesNames","getSiteInstalledModules","installedModules","getSiteLanguages","siteLanguages","getDisplayableNodePath","displayableNode","getLockInfo","lockInfo","getChildNodeTypes","childNodeTypes","getContributeTypesRestrictions","contentRestrictions","getSubNodesCount","_getSubNodesCountFrag","getSubNodesCountFragment","getMimeType","mimeTypes","applyFragment","query","replaceFragmentsInDocument"],"sources":["useNodeInfo.gql-queries.ts"],"sourcesContent":["import gql from 'graphql-tag';\nimport {\n    aggregatedPublicationInfo,\n    aggregatedPublicationInfoWithExistInLive,\n    childNodeTypes,\n    contentRestrictions,\n    displayableNode,\n    displayName,\n    Fragment,\n    getProperties,\n    installedModules, isExternal,\n    lockInfo,\n    mimeTypes,\n    nodeCacheRequiredFields,\n    operationSupport,\n    parentNode,\n    primaryNodeType,\n    replaceFragmentsInDocument,\n    siteLanguages\n} from '../../fragments';\nimport {getPermissionFragment, getSitePermissionFragment} from '../../fragments/getPermissionFragment';\nimport {getNodeTypeFragment} from '../../fragments/getIsNodeTypeFragment';\nimport {DocumentNode} from 'graphql';\nimport {getSubNodesCountFragment} from '~/fragments/getSubNodesCountFragment';\n\nconst getBaseQueryAndVariables = (variables: {[key:string]: any}): {\n    baseQuery: DocumentNode,\n    generatedVariables:{[key:string]: unknown},\n    skip: boolean\n} => {\n    if (variables.paths) {\n        return {\n            baseQuery: gql`\n                query NodesByPathInfoQuery($paths:[String!]!) {\n                    jcr {\n                        nodesByPath(paths:$paths) {\n                            name\n                            ...node\n                            ...NodeCacheRequiredFields\n                            ...External\n                        }\n                    }\n                }\n                ${nodeCacheRequiredFields.gql}\n                ${isExternal.gql}\n            `,\n            generatedVariables: {\n                paths: variables.paths\n            },\n            skip: false\n        };\n    }\n\n    if (variables.uuid && variables.uuid.length > 0) {\n        return {\n            baseQuery: gql`\n                query NodeByUuidInfoQuery($uuid:String!) {\n                    jcr {\n                        nodeById(uuid:$uuid) {\n                            name\n                            ...node\n                            ...NodeCacheRequiredFields\n                            ...External\n                        }\n                    }\n                }\n                ${nodeCacheRequiredFields.gql}\n                ${isExternal.gql}\n            `,\n            generatedVariables: {\n                uuid: variables.uuid\n            },\n            skip: false\n        };\n    }\n\n    if (variables.uuids) {\n        return {\n            baseQuery: gql`\n                query NodesByUuidInfoQuery($uuids:[String!]!) {\n                    jcr {\n                        nodesById(uuids:$uuids) {\n                            name\n                            ...node\n                            ...NodeCacheRequiredFields\n                            ...External\n                        }\n                    }\n                }\n                ${nodeCacheRequiredFields.gql}\n                ${isExternal.gql}\n            `,\n            generatedVariables: {\n                uuids: variables.uuids\n            },\n            skip: false\n        };\n    }\n\n    return {\n        baseQuery: gql`\n            query NodeByPathInfoQuery($path:String!) {\n                jcr {\n                    nodeByPath(path:$path) {\n                        name\n                        ...node\n                        ...NodeCacheRequiredFields\n                        ...External\n                    }\n                }\n            }\n            ${nodeCacheRequiredFields.gql}\n            ${isExternal.gql}\n        `,\n        generatedVariables: {\n            path: variables.path\n        },\n        skip: !variables.path || variables.path.length === 0\n    };\n};\n\nexport type NodeInfoOptions = Partial<{\n    getDisplayName: boolean,\n    getPrimaryNodeType: boolean,\n    getParent: boolean,\n    getAggregatedPublicationInfo: {\n        subNodes: boolean, reference: boolean\n    },\n    getOperationSupport: boolean,\n    getPermissions: string[],\n    getSitePermissions: string[],\n    getIsNodeTypes: string[],\n    getProperties: string[],\n    getSiteInstalledModules: boolean,\n    getSiteLanguages: boolean,\n    getDisplayableNodePath: boolean,\n    getLockInfo: boolean,\n    getChildNodeTypes: boolean,\n    getContributeTypesRestrictions: boolean,\n    getSubNodesCount: string[],\n    getMimeType: boolean,\n    applyFragment: Fragment\n}>;\n\nexport const validOptions = [\n    'getDisplayName',\n    'getPrimaryNodeType',\n    'getParent',\n    'getAggregatedPublicationInfo',\n    'getOperationSupport',\n    'getPermissions',\n    'getSitePermissions',\n    'getIsNodeTypes',\n    'getProperties',\n    'getSiteInstalledModules',\n    'getSiteLanguages',\n    'getDisplayableNodePath',\n    'getLockInfo',\n    'getChildNodeTypes',\n    'getContributeTypesRestrictions',\n    'getSubNodesCount',\n    'getMimeType',\n    'applyFragment'\n];\n\nexport const getQuery = (variables: {[key:string]: any}, schemaResult: any, options: NodeInfoOptions = {}) => {\n    const fragments = [];\n\n    const {baseQuery, generatedVariables, skip} = getBaseQueryAndVariables(variables);\n\n    if (!skip) {\n        if (options.getDisplayName) {\n            fragments.push(displayName);\n            if (!variables.language) {\n                throw Error('language is required');\n            }\n\n            generatedVariables.language = variables.language;\n        }\n\n        if (options.getPrimaryNodeType) {\n            fragments.push(primaryNodeType);\n            if (variables.displayLanguage) {\n                generatedVariables.displayLanguageSet = true;\n                generatedVariables.displayLanguage = variables.displayLanguage;\n            } else {\n                generatedVariables.displayLanguageSet = false;\n                generatedVariables.displayLanguage = '';\n            }\n        }\n\n        if (options.getParent) {\n            fragments.push(parentNode);\n        }\n\n        if (options.getAggregatedPublicationInfo) {\n            const supportsExistsInLive = schemaResult && schemaResult.__type && schemaResult.__type.fields && schemaResult.__type.fields.find((field: any) => field.name === 'existsInLive') !== undefined;\n            if (supportsExistsInLive) {\n                fragments.push(aggregatedPublicationInfoWithExistInLive);\n            } else {\n                fragments.push(aggregatedPublicationInfo);\n            }\n\n            if (!variables.language) {\n                throw Error('language is required');\n            }\n\n            generatedVariables.language = variables.language;\n            generatedVariables.aggregatedPublicationInfoSubNodes = Boolean(options.getAggregatedPublicationInfo.subNodes);\n            generatedVariables.aggregatedPublicationInfoIncludeReference = Boolean(options.getAggregatedPublicationInfo.reference);\n        }\n\n        if (options.getOperationSupport) {\n            fragments.push(operationSupport);\n        }\n\n        if (options.getPermissions) {\n            options.getPermissions.forEach(name => {\n                const {fragment, variables: fragmentVariables} = getPermissionFragment(name);\n                fragments.push(fragment);\n                Object.assign(generatedVariables, fragmentVariables);\n            });\n        }\n\n        if (options.getSitePermissions) {\n            options.getSitePermissions.forEach(name => {\n                const {fragment, variables: fragmentVariables} = getSitePermissionFragment(name);\n                fragments.push(fragment);\n                Object.assign(generatedVariables, fragmentVariables);\n            });\n        }\n\n        if (options.getIsNodeTypes) {\n            options.getIsNodeTypes.forEach(name => {\n                const {fragment, variables: fragmentVariables} = getNodeTypeFragment(name);\n                fragments.push(fragment);\n                Object.assign(generatedVariables, fragmentVariables);\n            });\n        }\n\n        if (options.getProperties) {\n            fragments.push(getProperties);\n            generatedVariables.getPropertiesNames = options.getProperties;\n\n            if (!variables.language) {\n                throw Error('language is required');\n            }\n\n            generatedVariables.language = variables.language;\n        }\n\n        if (options.getSiteInstalledModules) {\n            fragments.push(installedModules);\n        }\n\n        if (options.getSiteLanguages) {\n            fragments.push(siteLanguages);\n        }\n\n        if (options.getDisplayableNodePath) {\n            fragments.push(displayableNode);\n        }\n\n        if (options.getLockInfo) {\n            fragments.push(lockInfo);\n        }\n\n        if (options.getChildNodeTypes) {\n            fragments.push(childNodeTypes);\n        }\n\n        if (options.getContributeTypesRestrictions) {\n            fragments.push(contentRestrictions);\n        }\n\n        if (options.getSubNodesCount) {\n            options.getSubNodesCount.forEach(name => {\n                const {fragment, variables: fragmentVariables} = getSubNodesCountFragment(name);\n                fragments.push(fragment);\n                Object.assign(generatedVariables, fragmentVariables);\n            });\n        }\n\n        if (options.getMimeType) {\n            fragments.push(mimeTypes);\n        }\n\n        if (options.applyFragment) {\n            fragments.push(options.applyFragment);\n        }\n    }\n\n    return {\n        query: replaceFragmentsInDocument(baseQuery, fragments),\n        generatedVariables,\n        skip\n    };\n};\n"],"mappings":"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"}